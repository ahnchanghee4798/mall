---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: 고객
  labels:
    app: 고객
spec:
  replicas: 1
  selector:
    matchLabels:
      app: 고객
  template:
    metadata:
      labels:
        app: 고객
    spec:
      containers:
        - name: 고객
          image: username/고객:latest
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: 배송
  labels:
    app: 배송
spec:
  replicas: 1
  selector:
    matchLabels:
      app: 배송
  template:
    metadata:
      labels:
        app: 배송
    spec:
      containers:
        - name: 배송
          image: username/배송:latest
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: BoundedContext1319
  labels:
    app: BoundedContext1319
spec:
  replicas: 1
  selector:
    matchLabels:
      app: BoundedContext1319
  template:
    metadata:
      labels:
        app: BoundedContext1319
    spec:
      containers:
        - name: BoundedContext1319
          image: username/BoundedContext1319:latest
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: BoundedContext806
  labels:
    app: BoundedContext806
spec:
  replicas: 1
  selector:
    matchLabels:
      app: BoundedContext806
  template:
    metadata:
      labels:
        app: BoundedContext806
    spec:
      containers:
        - name: BoundedContext806
          image: username/BoundedContext806:latest
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5


---


apiVersion: v1
kind: Service
metadata:
  name: 고객
  labels:
    app: 고객
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: 고객


---


apiVersion: v1
kind: Service
metadata:
  name: 배송
  labels:
    app: 배송
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: 배송


---


apiVersion: v1
kind: Service
metadata:
  name: BoundedContext1319
  labels:
    app: BoundedContext1319
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: BoundedContext1319


---


apiVersion: v1
kind: Service
metadata:
  name: BoundedContext806
  labels:
    app: BoundedContext806
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: BoundedContext806

